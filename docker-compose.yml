version: '3.8'

services:
  # Golang WMS Server
  wms-server:
    build:
      context: ./backend/wms-server
      dockerfile: Dockerfile
    container_name: weather-wms
    ports:
      - "8080:8080"
    volumes:
      - ./data/weather:/data/weather:ro
    environment:
      - DATA_DIR=/data/weather
      - PORT=8080
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Weather Processor Service
  processor:
    build:
      context: .
      dockerfile: backend/processor/Dockerfile
    container_name: weather-processor
    ports:
      - "8081:8081"
    volumes:
      - ./data/weather:/data/weather
    environment:
      - DATA_DIR=/data/weather
      - FETCH_INTERVAL=21600
      - NOAA_BASE_URL=https://nomads.ncep.noaa.gov/cgi-bin/filter_gfs_0p25.pl
      - API_PORT=8081
      - RUN_API=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 60s
      timeout: 10s
      retries: 3

  # Frontend Web Server
  nginx:
    image: nginx:alpine
    container_name: weather-frontend
    ports:
      - "8888:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    depends_on:
      wms-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  weather-data:
  thredds-config:

networks:
  default:
    name: weather-network
